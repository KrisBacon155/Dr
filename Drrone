-- Combined Drone Script with Item Scan Mode
-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- Player Character
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Drone Part
local drone = Instance.new("Part")
drone.Anchored = true
drone.CanCollide = false
drone.Size = Vector3.new(2.5, 0.3, 2.5)
drone.Material = Enum.Material.SmoothPlastic
drone.BrickColor = BrickColor.White()
drone.Name = "FlashDrone"
drone.Position = hrp.Position + Vector3.new(0, 8, -6)
drone.Parent = workspace

-- Drone Lights
local flashlight = Instance.new("SpotLight", drone)
flashlight.Range = 60
flashlight.Brightness = 3
flashlight.Angle = 60
flashlight.Face = Enum.NormalId.Front
flashlight.Color = Color3.new(1, 1, 1)

local ambient = Instance.new("PointLight", drone)
ambient.Range = 16
ambient.Brightness = 0.8
ambient.Color = Color3.new(1, 1, 1)

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DroneGui"
gui.ResetOnSpawn = false

local scanBtn = Instance.new("TextButton")
scanBtn.Size = UDim2.new(0, 100, 0, 40)
scanBtn.Position = UDim2.new(0, 30, 0, 200)
scanBtn.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
scanBtn.TextColor3 = Color3.new(1, 1, 1)
scanBtn.Text = "Scan"
scanBtn.Font = Enum.Font.GothamBold
scanBtn.Parent = gui
scanBtn.Active = true
scanBtn.Draggable = true
scanBtn.AutoButtonColor = false
scanBtn.ZIndex = 2

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 40)
toggleBtn.Position = UDim2.new(0, 30, 0, 250)
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Text = "Mode: Players"
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.Parent = gui
toggleBtn.Draggable = true
toggleBtn.ZIndex = 2

local scanModes = { "Players", "NPCs", "Items" }
local scanIndex = 1
local spinning = false

-- Toggle Mode Button
toggleBtn.MouseButton1Click:Connect(function()
	scanIndex = scanIndex % #scanModes + 1
	toggleBtn.Text = "Mode: " .. scanModes[scanIndex]
end)

-- Color Based on Distance
local function getDistanceColor(distance)
	if distance <= 100 then
		return Color3.fromRGB(255, 0, 0)
	elseif distance <= 300 then
		return Color3.fromRGB(255, 255, 255)
	else
		return Color3.fromRGB(0, 255, 0)
	end
end

-- Pulse Ring Effect
local function createPulseCircle(model)
	local hrp = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChild("PrimaryPart")
	if not hrp then return end

	local gui = Instance.new("BillboardGui")
	gui.Size = UDim2.new(6, 0, 6, 0)
	gui.Adornee = hrp
	gui.AlwaysOnTop = true
	gui.LightInfluence = 0
	gui.MaxDistance = 1000
	gui.Parent = model

	local image = Instance.new("ImageLabel")
	image.AnchorPoint = Vector2.new(0.5, 0.5)
	image.Position = UDim2.new(0.5, 0, 0.5, 0)
	image.Size = UDim2.new(1, 0, 1, 0)
	image.BackgroundTransparency = 1
	image.Image = "rbxassetid://92229924136385"
	image.ImageTransparency = 0.2
	image.ImageColor3 = getDistanceColor((hrp.Position - hrp.Position).Magnitude)
	image.Parent = gui

	TweenService:Create(image, TweenInfo.new(1.25), {
		Size = UDim2.new(3, 0, 3, 0),
		ImageTransparency = 1
	}):Play()

	task.delay(1.25, function()
		gui:Destroy()
	end)
end

-- Exclamation Mark
local function createExclamationAbove(char)
	local head = char:FindFirstChild("Head") or char:FindFirstChild("PrimaryPart")
	if not head then return end

	local distance = (camera.CFrame.Position - head.Position).Magnitude
	local scale = math.clamp(100 / distance, 0.7, 2.5)
	local color = getDistanceColor(distance)

	local gui = Instance.new("BillboardGui")
	gui.Size = UDim2.new(0, 40 * scale, 0, 40 * scale)
	gui.StudsOffset = Vector3.new(0, 3, 0)
	gui.AlwaysOnTop = true
	gui.Adornee = head
	gui.Parent = char

	local label = Instance.new("TextLabel", gui)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = "!"
	label.TextColor3 = color
	label.TextScaled = true
	label.Font = Enum.Font.Arcade
	label.TextStrokeTransparency = 0.5

	TweenService:Create(label, TweenInfo.new(1.5), {
		TextTransparency = 1,
		TextStrokeTransparency = 1
	}):Play()

	task.delay(1.5, function()
		gui:Destroy()
	end)
end

-- Scan Pulse Logic
local function scanPulse()
	for _, model in pairs(workspace:GetDescendants()) do
		if model:IsA("Model") and model:FindFirstChild("PrimaryPart") or model:FindFirstChild("HumanoidRootPart") then
			if model ~= character then
				local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
				local isItem = model:FindFirstChild("IsItem") ~= nil
				local distance = (hrp.Position - (model.PrimaryPart or model:FindFirstChild("HumanoidRootPart")).Position).Magnitude
				if distance <= 1500 then
					local mode = scanModes[scanIndex]
					if (mode == "Players" and isPlayer) or
					   (mode == "NPCs" and not isPlayer and not isItem) or
					   (mode == "Items" and isItem) then
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				end
			end
		end
	end

	if not spinning then
		spinning = true
		for i = 1, 3 do
			local spin = TweenService:Create(drone, TweenInfo.new(0.15, Enum.EasingStyle.Linear), {
				CFrame = drone.CFrame * CFrame.Angles(0, math.rad(120), 0)
			})
			spin:Play()
			spin.Completed:Wait()
		end
		spinning = false
	end
end

-- Button
scanBtn.MouseButton1Click:Connect(scanPulse)

-- Drone Follow Logic
local up = true
local offset = 0

RunService.RenderStepped:Connect(function(dt)
	offset += (up and 0.5 or -0.5) * dt
	if offset > 0.5 then up = false elseif offset < -0.5 then up = true end

	local lookVector = hrp.CFrame.LookVector
	local followPos = hrp.Position + Vector3.new(0, 4 + offset, 0) - lookVector * 4
	drone.CFrame = CFrame.new(followPos, followPos + lookVector)
end)

-- On Respawn
player.CharacterAdded:Connect(function(char)
	character = char
	hr...
    }
  ]
}
