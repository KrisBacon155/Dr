-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- Player Character
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Drone Part
local drone = Instance.new("Part")
drone.Anchored = true
drone.CanCollide = false
drone.Size = Vector3.new(2.5, 0.3, 2.5)
drone.Material = Enum.Material.SmoothPlastic
drone.BrickColor = BrickColor.White()
drone.Name = "FlashDrone"
drone.Position = hrp.Position + Vector3.new(0, 8, -6)
drone.Parent = workspace

-- Drone Lights
local flashlight = Instance.new("SpotLight", drone)
flashlight.Range = 60
flashlight.Brightness = 3
flashlight.Angle = 60
flashlight.Face = Enum.NormalId.Front
flashlight.Color = Color3.new(1, 1, 1)

local ambient = Instance.new("PointLight", drone)
ambient.Range = 16
ambient.Brightness = 0.8
ambient.Color = Color3.new(1, 1, 1)

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DroneGui"
gui.ResetOnSpawn = false

local scanBtn = Instance.new("TextButton")
scanBtn.Size = UDim2.new(0, 100, 0, 40)
scanBtn.Position = UDim2.new(0, 30, 0, 200)
scanBtn.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
scanBtn.TextColor3 = Color3.new(1, 1, 1)
scanBtn.Text = "Scan"
scanBtn.Font = Enum.Font.GothamBold
scanBtn.Parent = gui
scanBtn.Active = true
scanBtn.Draggable = true
scanBtn.AutoButtonColor = false
scanBtn.ZIndex = 2

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 40)
toggleBtn.Position = UDim2.new(0, 30, 0, 250)
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Text = "Mode: Players"
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.Parent = gui
toggleBtn.Active = true
toggleBtn.Draggable = true
toggleBtn.ZIndex = 2

local scanMode = "Players" -- or "NPCs" or "Items"
local spinning = false

-- Toggle Mode Button
toggleBtn.MouseButton1Click:Connect(function()
	if scanMode == "Players" then
		scanMode = "NPCs"
	elseif scanMode == "NPCs" then
		scanMode = "Items"
	else
		scanMode = "Players"
	end
	toggleBtn.Text = "Mode: " .. scanMode
end)

-- Color Based on Distance
local function getDistanceColor(distance)
	if distance <= 250 then
		return Color3.fromRGB(255, 0, 0) -- Red for close
	elseif distance <= 700 then
		return Color3.fromRGB(255, 255, 255) -- White for medium
	else
		return Color3.fromRGB(0, 255, 0) -- Green for far
	end
end
end

-- Pulse Ring Effect
local function createPulseCircle(model)
	local hrp = model:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = "PulseCircle"
	billboard.Adornee = hrp
	billboard.Size = UDim2.new(6, 0, 6, 0)
	billboard.StudsOffset = Vector3.new(0, 0, 0)
	billboard.AlwaysOnTop = true
	billboard.LightInfluence = 0
	billboard.MaxDistance = 1000
	billboard.Parent = model

	local image = Instance.new("ImageLabel")
	image.AnchorPoint = Vector2.new(0.5, 0.5)
	image.Position = UDim2.new(0.5, 0, 0.5, 0)
	image.Size = UDim2.new(1, 0, 1, 0)
	image.BackgroundTransparency = 1
	image.Image = "rbxassetid://92229924136385"
	image.ImageColor3 = getDistanceColor((hrp.Position - character.HumanoidRootPart.Position).Magnitude)
	image.ImageTransparency = 0.2
	image.Rotation = 0
	image.Parent = billboard

	local tween = TweenService:Create(image, TweenInfo.new(1.25), {
		Size = UDim2.new(3, 0, 3, 0),
		ImageTransparency = 1,
		Rotation = 360
	})
	tween:Play()
	tween.Completed:Connect(function()
		billboard:Destroy()
	end)
end

-- Exclamation Mark and Highlight
local function createExclamationAbove(char)
	local head = char:FindFirstChild("Head")
	local root = char:FindFirstChild("HumanoidRootPart")
	if not head or not root then return end

	local distance = (camera.CFrame.Position - head.Position).Magnitude
	local scale = math.clamp(1500 / distance, 0.7, 2.5)
	local color = getDistanceColor(distance)

	local gui = Instance.new("BillboardGui")
	gui.Size = UDim2.new(0, 40 * scale, 0, 40 * scale)
	gui.StudsOffset = Vector3.new(0, 3, 0)
	gui.AlwaysOnTop = true
	gui.Adornee = head
	gui.Parent = char

	local label = Instance.new("TextLabel", gui)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = "!"
	label.TextColor3 = color
	label.TextScaled = true
	label.Font = Enum.Font.Arcade
	label.TextStrokeTransparency = 0.5

	local highlight = Instance.new("Highlight")
	highlight.FillColor = color
	highlight.OutlineTransparency = 1
	highlight.Adornee = char
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = char

	local tween = TweenService:Create(label, TweenInfo.new(1.5), { TextTransparency = 1, TextStrokeTransparency = 1 })
	tween:Play()
	tween.Completed:Connect(function()
		gui:Destroy()
		highlight:Destroy()
	end)
end

-- Pulse Scan Logic
local function scanPulse()
	if not spinning then
		spinning = true
		task.spawn(function()
			for _ = 1, 3 do
				local spin = TweenService:Create(drone, TweenInfo.new(0.15, Enum.EasingStyle.Linear), {
					CFrame = drone.CFrame * CFrame.Angles(0, math.rad(120), 0)
				})
				spin:Play()
				spin.Completed:Wait()
			end
			spinning = false
		end)
	end

	local scanned = {}
	for _, model in pairs(workspace:GetDescendants()) do
		if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= character then
			local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
			local isItem = model:FindFirstChild("IsItem") ~= nil
			if (scanMode == "Players" and isPlayer)
				or (scanMode == "NPCs" and not isPlayer)
				or (scanMode == "Items" and isItem) then
				local distance = (drone.Position - model.HumanoidRootPart.Position).Magnitude
				if distance <= 1500 then
					createPulseCircle(model)
					createExclamationAbove(model)
				end
			end
		end
	end
end
			spinning = false
		end)
	end

	local scanned = {}
	for _, model in pairs(workspace:GetDescendants()) do
		if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= character then
			local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
			local isItem = model:FindFirstChild("IsItem")
			if (scanMode == "Players" and isPlayer) or (scanMode == "NPCs" and not isPlayer) or (scanMode == "Items" and isItem) then
				local distance = (drone.Position - model.HumanoidRootPart.Position).Magnitude
				if distance <= 1500 then
					scanned[model] = true
					createPulseCircle(model)
					createExclamationAbove(model)
				end
			end
		end
	end
end
			spinning = false
		end)
	end

	-- Create a red expanding sphere
	local pulseSphere = Instance.new("Part")
	pulseSphere.Shape = Enum.PartType.Ball
	pulseSphere.Anchored = true
	pulseSphere.CanCollide = false
	pulseSphere.Transparency = 0.7
	pulseSphere.Color = Color3.fromRGB(255, 0, 0)
	pulseSphere.Material = Enum.Material.ForceField
	pulseSphere.Size = Vector3.new(1, 1, 1)
	pulseSphere.CFrame = CFrame.new(drone.Position)
	pulseSphere.Parent = workspace

	local scanned = {}
	local radius = 0

	local tween = TweenService:Create(pulseSphere, TweenInfo.new(1.25), {
		Size = Vector3.new(3000, 3000, 3000),
		Transparency = 1
	})
	tween:Play()

	local connection
	connection = RunService.Heartbeat:Connect(function()
		radius += 120 -- approx growth per frame
		for _, model in pairs(workspace:GetDescendants()) do
			if not scanned[model] and model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= character then
				local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
				local isItem = model:FindFirstChild("IsItem")
				if (scanMode == "Players" and isPlayer) or (scanMode == "NPCs" and not isPlayer) or (scanMode == "Items" and isItem) then
					local distance = (drone.Position - model.HumanoidRootPart.Position).Magnitude
					if distance <= radius then
						scanned[model] = true
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				end
			end
		if radius >= 1500 then
			connection:Disconnect()
			pulseSphere:Destroy()
		end
	end)
end
			spinning = false
		end)
	end

	local pulseRing = Instance.new("BillboardGui")
	pulseRing.Size = UDim2.new(0, 0, 0, 0)
	pulseRing.StudsOffset = Vector3.new(0, 0.1, 0)
	pulseRing.Adornee = drone
	pulseRing.AlwaysOnTop = true
	pulseRing.LightInfluence = 0
	pulseRing.Parent = drone

	local ringImage = Instance.new("ImageLabel")
	ringImage.AnchorPoint = Vector2.new(0.5, 0.5)
	ringImage.Position = UDim2.new(0.5, 0, 0.5, 0)
	ringImage.Size = UDim2.new(0, 0, 0, 0)
	ringImage.BackgroundTransparency = 1
	ringImage.Image = "rbxassetid://92229924136385"
	ringImage.ImageTransparency = 0.25
	ringImage.ZIndex = 1
	ringImage.Parent = pulseRing

	local scanned = {}
	local radius = 0

	local tween = TweenService:Create(ringImage, TweenInfo.new(1.25), {
		Size = UDim2.new(0, 3000, 0, 3000), -- 1500 studs radius x2
		ImageTransparency = 1
	})
	tween:Play()

	local connection
	connection = RunService.Heartbeat:Connect(function()
		radius += 120 -- expand per frame approximation
		for _, model in pairs(workspace:GetDescendants()) do
			if not scanned[model] and model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= character then
				local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
				local isItem = model:FindFirstChild("IsItem")
				if (scanMode == "Players" and isPlayer) or (scanMode == "NPCs" and not isPlayer) or (scanMode == "Items" and isItem) then
					local distance = (drone.Position - model.HumanoidRootPart.Position).Magnitude
					if distance <= radius then
						scanned[model] = true
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				end
			end
		if radius >= 1500 then
			connection:Disconnect()
			pulseRing:Destroy()
		end
	end)
end
			spinning = false
		end)
	end

	-- Create a visible 2D pulse ring using BillboardGui
	local pulseRing = Instance.new("BillboardGui")
	pulseRing.Size = UDim2.new(0, 0, 0, 0)
	pulseRing.StudsOffset = Vector3.new(0, 0.1, 0)
	pulseRing.Adornee = drone
	pulseRing.AlwaysOnTop = true
	pulseRing.LightInfluence = 0
	pulseRing.Parent = drone

	local ringImage = Instance.new("ImageLabel")
	ringImage.AnchorPoint = Vector2.new(0.5, 0.5)
	ringImage.Position = UDim2.new(0.5, 0, 0.5, 0)
	ringImage.Size = UDim2.new(0, 1, 0, 1)
	ringImage.BackgroundTransparency = 1
	ringImage.Image = "rbxassetid://92229924136385"
	ringImage.ImageTransparency = 0.25
	ringImage.ZIndex = 1
	ringImage.Parent = pulseRing

	local scanned = {}
	local startTime = tick()

	RunService.RenderStepped:Connect(function()
		local elapsed = tick() - startTime
		local radius = math.min(elapsed * 800, 1500)
		ringImage.Size = UDim2.new(0, radius * 2, 0, radius * 2)
		ringImage.ImageTransparency = elapsed > 1.25 and 1 or (1 - (elapsed / 1.25))

		for _, model in pairs(workspace:GetDescendants()) do
			if not scanned[model] and model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") and model ~= character then
				local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
				local isItem = model:FindFirstChild("IsItem")
				if (scanMode == "Players" and isPlayer) or (scanMode == "NPCs" and not isPlayer) or (scanMode == "Items" and isItem) then
					local distance = (drone.Position - model.HumanoidRootPart.Position).Magnitude
					if distance <= radius then
						scanned[model] = true
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				end
			end
	end)

		if radius >= 1500 then
			pulseRing:Destroy()
			return
		end
	end)
end
endants()) do
		if model:IsA("Model") and model:FindFirstChild("Humanoid") and model:FindFirstChild("HumanoidRootPart") then
			if model ~= character then
				local isPlayer = Players:GetPlayerFromCharacter(model) ~= nil
				if (scanMode == "Players" and isPlayer) or (scanMode == "NPCs" and not isPlayer) then
					local distance = (hrp.Position - model.HumanoidRootPart.Position).Magnitude
					if distance <= 1500 then
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				elseif scanMode == "Items" and model:FindFirstChild("IsItem") then
					local itemPos = model:IsA("Model") and model:GetModelCFrame().Position or model.Position
					local distance = (hrp.Position - itemPos).Magnitude
					if distance <= 1500 then
						createPulseCircle(model)
						createExclamationAbove(model)
					end
				end
				end
			end
		end
	end

	if not spinning then
		spinning = true
		spawn(function()
			for i = 1, 3 do
				local spin = TweenService:Create(drone, TweenInfo.new(0.15, Enum.EasingStyle.Linear), {
					CFrame = drone.CFrame * CFrame.Angles(0, math.rad(120), 0)
				})
				spin:Play()
				spin.Completed:Wait()
			end
			spinning = false
		end)
	end
end

-- Button Click
scanBtn.MouseButton1Click:Connect(scanPulse)

-- Floating + Facing Logic
local up = true
local offset = 0

RunService.RenderStepped:Connect(function(dt)
	if character and hrp then
		offset += (up and 0.5 or -0.5) * dt
		if offset > 0.5 then up = false elseif offset < -0.5 then up = true end

		local lookVector = hrp.CFrame.LookVector
		local followPos = hrp.Position + Vector3.new(0, 4 + offset, 0) - lookVector * 4
		drone.CFrame = CFrame.new(followPos, followPos + lookVector)
	end
end)

-- Respawn Tracking
player.CharacterAdded:Connect(function(char)
	character = char
	hrp = char:WaitForChild("HumanoidRootPart")
	humanoid = char:WaitForChild("Humanoid")
end)
